{"version":3,"sources":["components/Preloader/preloader.gif","history/history.js","components/TextUnderSearchField/TextUnderSearchField.jsx","components/SearchField/SearchField.jsx","components/Button/Button.jsx","containers/SearchBlock/SearchBlock.jsx","components/Preloader/Preloader.jsx","components/Repo/Repo.jsx","components/RepoList/RepoList.jsx","Redux/constants.js","api/instances/gitHub.js","api/index.js","api/gitHub/repos.js","Redux/actions.js","App.js","serviceWorker.js","Redux/reducers.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","TextUnderSearchField","_ref","styleToText","react_default","a","createElement","className","style","SearchField","onFocusChange","styleToSearchField","onValueChange","onBlurChange","progressBar","defaultValueForSearch","onFocus","onBlur","onChange","defaultValue","onKeyPress","type","placeholder","Button","isDisabled","onClick","id","disabled","value","SearchBlock","isDisabledButton","handleButtonClick","handleSearchFieldFocus","handleSearchFieldBlur","handleSearchFieldChange","line","textUnderSearchFieldColor","components_TextUnderSearchField_TextUnderSearchField","color","components_SearchField_SearchField","borderBottom","width","react_router_dom","to","textDecoration","components_Button_Button","Preloader","src","preloader","alt","Repo","name","avatarURL","linkToRepo","href","target","rel","RepoList","repos","currentRequest","map","repo","i","components_Repo_Repo","key","owner","avatar_url","html_url","FETCH_REPOS_PENDING","FETCH_REPOS_SUCCESS","FETCH_REPOS_ERROR","instance","axios","create","baseURL","timeout","defaults","headers","post","interceptors","request","use","conf","error","Promise","reject","response","api","getRepos","_getRepos","Object","asyncToGenerator","regenerator_default","mark","_callee","payload","wrap","_context","prev","next","get","concat","abrupt","sent","t0","console","warn","stop","_x","apply","this","arguments","buttonClickAction","event","dispatch","getState","changeSearchBlockReducer","searchFieldValue","then","err","App","_this$props","props","isShowPreloader","isLoaded","buttonClick","searchFieldFocus","searchFieldBlur","searchFieldChange","react_router","history","path","exact","render","containers_SearchBlock_SearchBlock","components_Preloader_Preloader","components_RepoList_RepoList","Component","connect","state","styleReducer","push","searchFieldChangeAction","Boolean","window","location","hostname","match","searchBlockInitialState","styleInitialState","rootReducer","combineReducers","length","undefined","action","objectSpread","status","data","items","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca0797fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.217785e6.gif\";","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextUnderSearchField = ({styleToText}) => {\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <p className=\"text-under-searchfield text-center\" style={styleToText}>\r\n        Фраза для поиска репозитория GitHub\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nTextUnderSearchField.propTypes = {\r\n  styleToText: PropTypes.object,\r\n};\r\n\r\nexport default TextUnderSearchField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchField = ({\r\n                       onFocusChange,\r\n                       styleToSearchField,\r\n                       onValueChange,\r\n                       onBlurChange,\r\n                       progressBar,\r\n                       defaultValueForSearch\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"searchField-wrapper\" style={styleToSearchField}>\r\n      <input\r\n        onFocus={onFocusChange}\r\n        onBlur={onBlurChange}\r\n        onChange={onValueChange}\r\n        defaultValue={defaultValueForSearch}\r\n        onKeyPress={onValueChange}\r\n        className=\"searchField text-center\"\r\n        type=\"search\"\r\n        placeholder=\"Введите фразу для поиска репозитория GitHub\">\r\n      </input>\r\n      <div className=\"test\" style={progressBar}></div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nSearchField.propTypes = {\r\n  onFocusChange: PropTypes.func,\r\n  onValueChange: PropTypes.func,\r\n  onBlurChange: PropTypes.func,\r\n  styleToSearchField: PropTypes.object,\r\n  progressBar: PropTypes.object,\r\n  defaultValueForSearch: PropTypes.string,\r\n};\r\n\r\nexport default SearchField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({isDisabled, onClick}) => {\r\n\r\n  return (\r\n    <div className=\"button-wrapper flex-center\">\r\n      <input\r\n        id=\"buttonID\"\r\n        className=\"button\"\r\n        type=\"button\"\r\n        disabled={isDisabled}\r\n        value=\"Найти репозитории\"\r\n        onClick={onClick}\r\n      />\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nButton.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport TextUnderSearchField from \"../../components/TextUnderSearchField\";\r\nimport SearchField from \"../../components/SearchField\";\r\nimport Button from \"../../components/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBlock = ({\r\n                       isDisabledButton,\r\n                       defaultValueForSearch,\r\n\r\n                       handleButtonClick,\r\n                       handleSearchFieldFocus,\r\n                       handleSearchFieldBlur,\r\n                       handleSearchFieldChange,\r\n\r\n                       line,\r\n                       textUnderSearchFieldColor,\r\n                       progressBar,\r\n}) => {\r\n\r\n  return (\r\n    <div className=\"app-grid-wrapper\">\r\n      <div className=\"content content-position flex-center column-flex-direction\">\r\n        <TextUnderSearchField\r\n          styleToText={{ color: textUnderSearchFieldColor }}\r\n        />\r\n        <SearchField\r\n          className=\"\"\r\n          onBlurChange={handleSearchFieldBlur}\r\n          onFocusChange={handleSearchFieldFocus}\r\n          onValueChange={handleSearchFieldChange}\r\n          defaultValueForSearch={defaultValueForSearch}\r\n          styleToSearchField={{ borderBottom: line }}\r\n          progressBar={{ width: progressBar}}\r\n        />\r\n        <Link to={'/results'} style={{textDecoration: 'none'}}>\r\n          <Button\r\n            isDisabled={isDisabledButton}\r\n            onClick={handleButtonClick}\r\n          />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nSearchBlock.propTypes = {\r\n  textUnderSearchFieldColor: PropTypes.string,\r\n  line: PropTypes.string,\r\n  progressBar: PropTypes.string,\r\n  isDisabledButton: PropTypes.bool,\r\n  handleButtonClick: PropTypes.func,\r\n  handleSearchFieldFocus: PropTypes.func,\r\n  handleSearchFieldBlur: PropTypes.func,\r\n  handleSearchFieldChange: PropTypes.func,\r\n  defaultValueForSearch: PropTypes.string,\r\n};\r\n\r\nexport default SearchBlock;\r\n","import React from 'react';\r\nimport preloader from './preloader.gif';\r\n\r\nconst Preloader = () => {\r\n\r\n  return (\r\n    <div className=\"preloader-wrapper flex-center\">\r\n      <img src={preloader} alt=\"preloader\"></img>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Repo = ({id, name, avatarURL, linkToRepo}) => {\r\n\r\n  return (\r\n    <div className=\"Repo-wrapper flex-center\">\r\n      <img className=\"avatar\" src={avatarURL} alt=\"avatar\"></img>\r\n      <p className=\"\">{name}</p>\r\n      <a className=\"link-to-repo\" href={linkToRepo} target=\"_blank\" rel=\"noopener noreferrer\"> → </a>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nRepo.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  avatarURL: PropTypes.string,\r\n  linkToRepo: PropTypes.string,\r\n};\r\n\r\nexport default Repo;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Repo from \"../Repo\";\r\n\r\nconst RepoList = ({ repos, currentRequest }) => {\r\n\r\n  if(currentRequest === \"facebook\") {\r\n    currentRequest=\"\";\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>Search repositories like \"{currentRequest}\"</h1>\r\n      {repos.map((repo, i) => (\r\n        <Repo\r\n          key={repos[i].id}\r\n          id={repos[i].id}\r\n          name={repos[i].name}\r\n          avatarURL={repos[i].owner.avatar_url}\r\n          linkToRepo={repos[i].html_url}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nRepoList.propTypes = {\r\n  repos: PropTypes.array,\r\n  currentRequest: PropTypes.string,\r\n};\r\n\r\nexport default RepoList;\r\n","\r\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const FETCH_REPOS_PENDING = 'FETCH_REPOS_PENDING';\r\nexport const FETCH_REPOS_SUCCESS = 'FETCH_REPOS_SUCCESS';\r\nexport const FETCH_REPOS_ERROR = 'FETCH_REPOS_ERROR';\r\nexport const SEARCH_FIELD_FOCUS = 'SEARCH_FIELD_FOCUS';\r\nexport const SEARCH_FIELD_BLUR = 'SEARCH_FIELD_BLUR';\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.github.com/',\r\n  timeout: 30000\r\n});\r\n\r\n// instance.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\r\ninstance.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n// request interceptor\r\ninstance.interceptors.request.use(\r\n  conf => conf,\r\n  error => Promise.reject(error)\r\n);\r\n\r\n// response interceptor\r\ninstance.interceptors.response.use(\r\n  response => response,\r\n  error => Promise.reject(error)\r\n);\r\n\r\nexport default instance\r\n","import repos from './gitHub/repos'\r\n\r\nexport default {\r\n  repos,\r\n}\r\n","import api from '../instances/gitHub'\r\n\r\nexport default {\r\n\r\n  getRepos: async (payload) => {\r\n    try {\r\n        return await api.get(`search/repositories?q=${payload}`)\r\n    } catch (e) {\r\n        console.warn('catch :: repos :: getRepos', e)\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  FETCH_REPOS_PENDING,\r\n  FETCH_REPOS_SUCCESS,\r\n  FETCH_REPOS_ERROR,\r\n  SEARCH_FIELD_FOCUS,\r\n  SEARCH_FIELD_BLUR,\r\n} from './constants'\r\n\r\nimport history from \"../history/history\";\r\nimport api from \"../api\";\r\n\r\nexport const buttonClickAction = (event) => (dispatch, getState) => {\r\n  dispatch(fetchReposPending(true));\r\n  return api.repos.getRepos(getState().changeSearchBlockReducer.searchFieldValue)\r\n    .then(\r\n      response => dispatch(fetchReposSuccess(response)),\r\n      err => dispatch(fetchReposError(err))\r\n    );\r\n};\r\n\r\nexport const searchFieldChangeAction = (event) => {\r\n  if(event.key === \"Enter\" && event.target.value) {\r\n    history.push('/results');\r\n    return buttonClickAction(event)\r\n  } else {\r\n    return {\r\n      type: CHANGE_SEARCH_FIELD,\r\n      payload: event,\r\n    }\r\n  }\r\n};\r\n\r\nfunction fetchReposPending(payload) {\r\n  return {\r\n    type: FETCH_REPOS_PENDING,\r\n    payload\r\n  };\r\n}\r\n\r\nfunction fetchReposSuccess(payload) {\r\n  return {\r\n    type: FETCH_REPOS_SUCCESS,\r\n    payload\r\n  };\r\n}\r\n\r\nfunction fetchReposError(payload) {\r\n  return {\r\n    type: FETCH_REPOS_ERROR,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const searchFieldFocusAction = (event) => {\r\n  return {\r\n    type: SEARCH_FIELD_FOCUS,\r\n    payload: {\r\n      line: \"1px solid rgba(96, 64, 176, 1)\",\r\n      textUnderSearchFieldColor: \"rgba(96, 64, 176, 1)\",\r\n      progressBar: \"100%\",\r\n    },\r\n  }\r\n};\r\n\r\nexport const searchFieldBlurAction = (event) => {\r\n  return {\r\n    type: SEARCH_FIELD_BLUR,\r\n    payload: {\r\n      line: \"1px solid rgba(66, 66, 66, 0.4)\",\r\n      textUnderSearchFieldColor: \"rgba(66, 66, 66, 0.4)\",\r\n      progressBar: \"0%\",\r\n    },\r\n  }\r\n};\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Router, Route } from 'react-router-dom'\r\nimport history from \"./history/history\";\r\nimport SearchBlock from \"./containers/SearchBlock\";\r\nimport Preloader from './components/Preloader';\r\nimport RepoList from './components/RepoList';\r\nimport './App.css';\r\n\r\nimport {\r\n  buttonClickAction,\r\n  searchFieldFocusAction,\r\n  searchFieldBlurAction,\r\n  searchFieldChangeAction,\r\n} from \"./Redux/actions\"\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    repos: state.changeSearchBlockReducer.repos,\r\n    searchFieldValue: state.changeSearchBlockReducer.searchFieldValue,\r\n    isDisabledButton: state.changeSearchBlockReducer.isDisabledButton,\r\n    isShowPreloader: state.changeSearchBlockReducer.isShowPreloader,\r\n    isLoaded: state.changeSearchBlockReducer.isLoaded,\r\n\r\n    line: state.styleReducer.line,\r\n    textUnderSearchFieldColor: state.styleReducer.textUnderSearchFieldColor,\r\n    progressBar: state.styleReducer.progressBar,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    buttonClick: (event) => dispatch(buttonClickAction(event)),\r\n    searchFieldFocus: (event) => dispatch(searchFieldFocusAction(event)),\r\n    searchFieldBlur: (event) => dispatch(searchFieldBlurAction(event)),\r\n    searchFieldChange: (event) => dispatch(searchFieldChangeAction(event)),\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    const {\r\n      repos,\r\n      searchFieldValue,\r\n      isDisabledButton,\r\n      isShowPreloader,\r\n      isLoaded,\r\n      line,\r\n      textUnderSearchFieldColor,\r\n      progressBar,\r\n\r\n      buttonClick,\r\n      searchFieldFocus,\r\n      searchFieldBlur,\r\n      searchFieldChange,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Router history={history}>\r\n          <Route path={'/'} exact={true} render={ () =>\r\n            <SearchBlock\r\n              isDisabledButton={isDisabledButton}\r\n              handleSearchFieldBlur={searchFieldBlur}\r\n              handleSearchFieldFocus={searchFieldFocus}\r\n              handleSearchFieldChange={searchFieldChange}\r\n              handleButtonClick={buttonClick}\r\n              defaultValueForSearch={searchFieldValue}\r\n              line={line}\r\n              textUnderSearchFieldColor={textUnderSearchFieldColor}\r\n              progressBar={progressBar}\r\n            />\r\n          }>\r\n          </Route>\r\n          <Route path={'/results'} exact={true} render={ () =>\r\n            (isShowPreloader || !isLoaded) ? (\r\n              <div className=\"app-grid-wrapper\">\r\n                <div className=\"content-position flex-center column-flex-direction\">\r\n                  <Preloader/>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"app-grid-wrapper2\">\r\n                <RepoList\r\n                    repos={repos}\r\n                    currentRequest={searchFieldValue}\r\n                />\r\n              </div>\r\n            )\r\n          }>\r\n          </Route>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport {\r\n  CHANGE_SEARCH_FIELD,\r\n  FETCH_REPOS_PENDING,\r\n  FETCH_REPOS_SUCCESS,\r\n  FETCH_REPOS_ERROR,\r\n  SEARCH_FIELD_FOCUS,\r\n  SEARCH_FIELD_BLUR,\r\n} from './constants'\r\n\r\nconst searchBlockInitialState = {\r\n  searchFieldValue: '',\r\n  isDisabledButton: true,\r\n  isShowPreloader: true,\r\n  repos: [],\r\n  isLoaded: false\r\n};\r\n\r\nexport const changeSearchBlockReducer = (state=searchBlockInitialState, action={}) => {\r\n  switch(action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return {\r\n        ...state,\r\n        searchFieldValue: action.payload.target.value,\r\n        isDisabledButton: !action.payload.target.value,\r\n      };\r\n    case FETCH_REPOS_PENDING:\r\n      return {\r\n        ...state,\r\n        isShowPreloader: action.payload,\r\n        isLoaded: !action.payload,\r\n      };\r\n    case FETCH_REPOS_SUCCESS:\r\n      if (action.payload.status === 200 && action.payload.data.items.length) {\r\n        return {\r\n          ...state,\r\n          isShowPreloader: false,\r\n          repos: action.payload.data.items,\r\n          isLoaded: true,\r\n        };\r\n      }\r\n      break;\r\n    case FETCH_REPOS_ERROR:\r\n      console.warn('something goes wrong', action.payload);\r\n      return {\r\n        ...state,\r\n        isShowPreloader: true,\r\n        isLoaded: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst styleInitialState = {\r\n  line: \"\",\r\n  textUnderSearchFieldColor: \"\",\r\n  progressBar: \"0%\",\r\n};\r\n\r\nexport const styleReducer = (state=styleInitialState, action={}) => {\r\n  switch(action.type) {\r\n    case SEARCH_FIELD_FOCUS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case SEARCH_FIELD_BLUR:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {\n  changeSearchBlockReducer,\n  styleReducer,\n} from \"./Redux/reducers\"\n\nconst rootReducer = combineReducers({ changeSearchBlockReducer, styleReducer });\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}